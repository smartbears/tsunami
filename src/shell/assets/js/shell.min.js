App = Em.Application.create({
    rootElement: $(".view-container")
}), App.Router.map(function() {
    this.resource("subjects", function() {
        this.resource("subject", {
            path: "/:id"
        }, function() {
            this.route("edit");
        }), this.route("add");
    });
}), App.IndexRoute = Ember.Route.extend({
    model: function() {
        return "subjects";
    },
    afterModel: function(a) {
        this.transitionTo(a);
    }
}), App.SubjectsRoute = Ember.Route.extend({
    model: function() {
        return this.store.find("subject");
    }
}), App.SubjectRoute = Ember.Route.extend({
    model: function(a) {
        return this.store.find("subject", a.id);
    }
});

var get = Ember.get, forEach = Ember.ArrayPolyfills.forEach;

DS.WebAPIAdapter = DS.RESTAdapter.extend({
    defaultSerializer: "DS/WebAPI",
    corsWithCredentials: !0,
    createRecord: function(a, b, c) {
        var d = {};
        d = a.serializerFor(b.typeKey).serialize(c, {
            includeId: !1
        });
        var e = a.serializerFor(b.typeKey).primaryKey;
        return e && delete d[e], this.ajax(this.buildURL(b.typeKey), "POST", {
            data: d
        });
    },
    deleteRecord: function(a, b, c) {
        var d = get(c, "id");
        return console.log(d), this.ajax(this.buildURL(b.typeKey, d), "DELETE", {
            data: d
        });
    },
    updateRecord: function(a, b, c) {
        var d = {};
        return d = a.serializerFor(b.typeKey).serialize(c, {
            includeId: !0
        }), this.ajax(this.buildURL(b.typeKey, d.id), "PUT", {
            data: d
        }, c);
    },
    findQuery: function(a, b, c) {
        return console.log(c), this.ajax(this.buildURL(b.typeKey), "GET", {
            data: c
        });
    },
    ajax: function(a, b, c, d) {
        var e = get(this, "antiForgeryTokenSelector");
        if (e) {
            var f = $(e).val();
            f && (this.headers = {
                RequestVerificationToken: f
            });
        }
        var g = this;
        return new Ember.RSVP.Promise(function(e, f) {
            if (c = c || {}, c.url = a, c.type = b, c.dataType = "json", c.context = g, console.log("here"), 
            c.crossDomain = !0, c.data && "GET" !== b && (c.contentType = "application/json; charset=utf-8", 
            c.data = JSON.stringify(c.data)), void 0 !== g.headers) {
                var h = g.headers;
                c.beforeSend = function(a) {
                    forEach.call(Ember.keys(h), function(b) {
                        a.setRequestHeader(b, h[b]);
                    });
                };
            }
            c.success = function(a) {
                void 0 === a && "PUT" === b ? d.send("didCommit") : Ember.run(null, e, a);
            }, c.error = function(a) {
                a && (a.then = null), Ember.run(null, f, a);
            }, Ember.$.ajax(c);
        });
    }
}), App.ApplicationAdapter = DS.WebAPIAdapter.extend({
    host: "http://localhost:8082/api"
}), App.Store = DS.Store.extend({});

var get = Ember.get;

DS.WebAPISerializer = DS.RESTSerializer.extend({
    extractSingle: function(a, b, c) {
        var d = b.typeKey, e = d, f = {};
        return f[e] = c, c = f, this._super.apply(this, arguments);
    },
    extractArray: function(a, b, c) {
        return c;
    }
}), App.Subject = DS.Model.extend({
    name: DS.attr("string"),
    age: DS.attr("number")
}), App.Subject.reopenClass({
    FIXTURES: [ {
        id: 1,
        name: "Jorge",
        age: 25
    }, {
        id: 2,
        name: "Javier",
        age: 30
    } ]
}), App.SubjectController = Ember.ObjectController.extend({
    isEditing: !1,
    actions: {
        edit: function() {
            this.set("isEditing", !0);
        },
        doneEditing: function() {
            var a = this.get("model");
            a.save(), this.set("isEditing", !1);
        },
        "delete": function() {
            var a = this.get("model");
            a.destroyRecord();
        }
    }
}), App.SubjectsController = Ember.ObjectController.extend({
    isSearching: !1,
    actions: {
        search: function() {
            var a = this.get("searchPattern"), b = this.store.find("subject", {
                pattern: a
            });
            this.set("isSearching", !0), this.set("model", b);
        },
        doneSearch: function() {
            this.set("isSearching", !1), this.set("model", this.store.find("subject")), this.transitionToRoute("subjects");
        }
    }
}), App.SubjectsAddController = Ember.ObjectController.extend({
    actions: {
        add: function() {
            var a = this.store.createRecord("subject", {
                name: this.get("name"),
                age: this.get("age")
            });
            a.save(), this.set("name", ""), this.set("age", ""), this.transitionToRoute("subjects");
        }
    }
});