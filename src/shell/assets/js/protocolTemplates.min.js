Ember.TEMPLATES["procedures"] = Ember.Handlebars.template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = '';
  stack1 = helpers['if'].call(depth0, "item.isEditing", {"name":"if","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(2, data),"inverse":this.program(4, data),"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n");
  return buffer;
},"2":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("						<div class=\"form-group list-group-item\">\r\n					    	");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'id': ("inputEditProcedure"),
    'focus-out': ("doneEditing"),
    'insert-newline': ("doneEditing"),
    'placeholder': ("Enter name..."),
    'class': ("form-control"),
    'value': ("item.name")
  },"hashTypes":{'id': "STRING",'focus-out': "STRING",'insert-newline': "STRING",'placeholder': "STRING",'class': "STRING",'value': "ID"},"hashContexts":{'id': depth0,'focus-out': depth0,'insert-newline': depth0,'placeholder': depth0,'class': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("\r\n					  	</div>\r\n");
  return buffer;
},"4":function(depth0,helpers,partials,data) {
  var stack1, helperMissing=helpers.helperMissing, buffer = '';
  stack1 = ((helpers['drag-element'] || (depth0 && depth0['drag-element']) || helperMissing).call(depth0, {"name":"drag-element","hash":{
    'dragType': ("visits"),
    'elementName': ("num"),
    'item': ("item.id")
  },"hashTypes":{'dragType': "STRING",'elementName': "STRING",'item': "ID"},"hashContexts":{'dragType': depth0,'elementName': depth0,'item': depth0},"fn":this.program(5, data),"inverse":this.noop,"types":[],"contexts":[],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  return buffer;
},"5":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("							<div ");
  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {"name":"bind-attr","hash":{
    'class': (":list-group-item item.id")
  },"hashTypes":{'class': "STRING"},"hashContexts":{'class': depth0},"types":[],"contexts":[],"data":data})));
  data.buffer.push(" style=\"font-size: 14px;\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "edit", "item", {"name":"action","hash":{
    'on': ("doubleClick")
  },"hashTypes":{'on': "STRING"},"hashContexts":{'on': depth0},"types":["STRING","ID"],"contexts":[depth0,depth0],"data":data})));
  data.buffer.push(" >\r\n								<span>");
  stack1 = helpers._triageMustache.call(depth0, "item.name", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</span>\r\n								<button type=\"button\" class=\"close\" aria-hidden=\"true\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete", "item", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING","ID"],"contexts":[depth0,depth0],"data":data})));
  data.buffer.push(">&times;</button>\r\n							</div>\r\n");
  return buffer;
},"7":function(depth0,helpers,partials,data) {
  data.buffer.push("		        Sorry, no elements were found.\r\n");
  },"9":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("<!-- TODO: Change this for a dinamyc input. -->\r\n			    <form role=\"form\">\r\n				  <div class=\"form-group\">\r\n				    <label for=\"name\">Name</label>\r\n				    ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'placeholder': ("Enter name..."),
    'class': ("form-control"),
    'value': ("name")
  },"hashTypes":{'placeholder': "STRING",'class': "STRING",'value': "ID"},"hashContexts":{'placeholder': depth0,'class': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("\r\n				  </div>\r\n				  <div class=\"form-group\">\r\n				    <label for=\"exampleInputPassword1\">Comments</label>\r\n				    ");
  data.buffer.push(escapeExpression(((helpers.textarea || (depth0 && depth0.textarea) || helperMissing).call(depth0, {"name":"textarea","hash":{
    'placeholder': ("Enter comments..."),
    'class': ("form-control"),
    'value': ("comments")
  },"hashTypes":{'placeholder': "STRING",'class': "STRING",'value': "ID"},"hashContexts":{'placeholder': depth0,'class': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("\r\n				  </div>\r\n\r\n				  <button type=\"submit\" class=\"btn btn-default\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "addProcedure", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">Add Procedure</button>\r\n				  <button type=\"submit\" class=\"btn btn-default\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "cancelProcedure", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">Cancel</button>\r\n				</form>\r\n");
  return buffer;
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("<div class=\"row\">\r\n	<div class=\"col-md-3\">\r\n		<div class=\"list-group\">\r\n");
  stack1 = helpers.each.call(depth0, "item", "in", "model", {"name":"each","hash":{
    'itemController': ("procedure")
  },"hashTypes":{'itemController': "STRING"},"hashContexts":{'itemController': depth0},"fn":this.program(1, data),"inverse":this.program(7, data),"types":["ID","ID","ID"],"contexts":[depth0,depth0,depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("		    ");
  stack1 = helpers['if'].call(depth0, "isCreating", {"name":"if","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(9, data),"inverse":this.noop,"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("		</div>\r\n		<button class=\"btn btn-default\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "newProcedure", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">New Procedure</button>\r\n	</div>\r\n</div>\r\n");
  return buffer;
},"useData":true});

Ember.TEMPLATES["protocol/edit"] = Ember.Handlebars.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
  data.buffer.push("EDIT\r\n");
  },"useData":true});

Ember.TEMPLATES["protocols/add"] = Ember.Handlebars.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("<div class=\"form-group\">\r\n<form class=\"form-horizontal\" role=\"form\">\r\n    <div class=\"col-md-4 resetHorPadding\">\r\n        ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'class': ("form-control"),
    'placeholder': ("Protocol name"),
    'value': ("name")
  },"hashTypes":{'class': "STRING",'placeholder': "STRING",'value': "ID"},"hashContexts":{'class': depth0,'placeholder': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("\r\n    </div>\r\n    <br/>\r\n    <br/><br/><br/>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-10 resetHorPadding\">\r\n            ");
  data.buffer.push(escapeExpression(helpers.view.call(depth0, "App.DatePicker", {"name":"view","hash":{
    'placeholder': ("Enter Enrollment date"),
    'class': ("form-control"),
    'valueBinding': ("model.enrollmentWindow")
  },"hashTypes":{'placeholder': "STRING",'class': "STRING",'valueBinding': "ID"},"hashContexts":{'placeholder': depth0,'class': depth0,'valueBinding': depth0},"types":["ID"],"contexts":[depth0],"data":data})));
  data.buffer.push("\r\n        </div>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-default\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "add", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">Add</button>\r\n</form>\r\n</div>\r\n");
  return buffer;
},"useData":true});

Ember.TEMPLATES["protocols/configure"] = Ember.Handlebars.template({"1":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("            <h1 class=\"protocol-title\" >\r\n                ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'insert-newline': ("updateName"),
    'focus-out': ("updateName"),
    'value': ("name")
  },"hashTypes":{'insert-newline': "STRING",'focus-out': "STRING",'value': "ID"},"hashContexts":{'insert-newline': depth0,'focus-out': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push(" \r\n            </h1>                   \r\n");
  return buffer;
},"3":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("            <h1 class=\"protocol-title\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "editName", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">");
  stack1 = helpers._triageMustache.call(depth0, "name", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</h1>            \r\n");
  return buffer;
},"5":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("            <p class=\"protocol-description\">\r\n              ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'insert-newline': ("updateDescription"),
    'focus-out': ("updateDescription"),
    'value': ("description")
  },"hashTypes":{'insert-newline': "STRING",'focus-out': "STRING",'value': "ID"},"hashContexts":{'insert-newline': depth0,'focus-out': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push(" \r\n            </p>\r\n");
  return buffer;
},"7":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("            <p class=\"protocol-description\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "editDescription", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">");
  stack1 = helpers._triageMustache.call(depth0, "description", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</p>\r\n");
  return buffer;
},"9":function(depth0,helpers,partials,data) {
  var stack1, helperMissing=helpers.helperMissing, buffer = '';
  stack1 = ((helpers['drag-element'] || (depth0 && depth0['drag-element']) || helperMissing).call(depth0, {"name":"drag-element","hash":{
    'elementName': ("num"),
    'item': ("procedure.id")
  },"hashTypes":{'elementName': "STRING",'item': "ID"},"hashContexts":{'elementName': depth0,'item': depth0},"fn":this.program(10, data),"inverse":this.noop,"types":[],"contexts":[],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  return buffer;
},"10":function(depth0,helpers,partials,data) {
  var stack1, buffer = '';
  data.buffer.push("                <li class=\"ui-state-default scroll_El\">\r\n");
  stack1 = helpers.unless.call(depth0, "procedure.isEditingName", {"name":"unless","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(11, data),"inverse":this.program(13, data),"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("                </li>\r\n");
  return buffer;
},"11":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("                      <span ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "editName", "procedure", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING","ID"],"contexts":[depth0,depth0],"data":data})));
  data.buffer.push(">                      \r\n                        ");
  stack1 = helpers._triageMustache.call(depth0, "procedure.name", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n                      </span>\r\n");
  return buffer;
},"13":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("                      ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'insert-newline': ("updateName"),
    'focus-out': ("updateName"),
    'placeholder': ("New Procedure"),
    'value': ("procedure.name")
  },"hashTypes":{'insert-newline': "STRING",'focus-out': "STRING",'placeholder': "STRING",'value': "ID"},"hashContexts":{'insert-newline': depth0,'focus-out': depth0,'placeholder': depth0,'value': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("                      \r\n");
  return buffer;
},"15":function(depth0,helpers,partials,data) {
  var stack1, helperMissing=helpers.helperMissing, buffer = '';
  data.buffer.push("             \r\n");
  stack1 = ((helpers['drop-element'] || (depth0 && depth0['drop-element']) || helperMissing).call(depth0, {"name":"drop-element","hash":{
    'elementName': ("visit"),
    'dropAction': ("drop_procedure_into_visit")
  },"hashTypes":{'elementName': "STRING",'dropAction': "STRING"},"hashContexts":{'elementName': depth0,'dropAction': depth0},"fn":this.program(16, data),"inverse":this.noop,"types":[],"contexts":[],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("              \r\n");
  stack1 = ((helpers.ifIsNthItem || (depth0 && depth0.ifIsNthItem) || helperMissing).call(depth0, {"name":"ifIsNthItem","hash":{
    'nth': (4),
    'startAt': (3)
  },"hashTypes":{'nth': "NUMBER",'startAt': "NUMBER"},"hashContexts":{'nth': depth0,'startAt': depth0},"fn":this.program(22, data),"inverse":this.noop,"types":[],"contexts":[],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n");
  return buffer;
},"16":function(depth0,helpers,partials,data) {
  var stack1, buffer = '';
  data.buffer.push("              <div class=\"col-sm-3\" id=\"col1\">\r\n                <div class=\"row margin-row nvisitPos\" id=\"nvisit1\" style=\"display:block\">\r\n                  <div   class= \"n_visit\" id= \"\">\r\n                    <h4 id=\"\" class=\"new-visit-title\" >");
  stack1 = helpers._triageMustache.call(depth0, "visit.label", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</h4>\r\n                    <div class=\"list-group\">\r\n");
  stack1 = helpers.each.call(depth0, "visitProc", "in", "visit.procedures", {"name":"each","hash":{
    'itemController': ("procedure")
  },"hashTypes":{'itemController': "STRING"},"hashContexts":{'itemController': depth0},"fn":this.program(17, data),"inverse":this.noop,"types":["ID","ID","ID"],"contexts":[depth0,depth0,depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n");
  return buffer;
},"17":function(depth0,helpers,partials,data) {
  var stack1, buffer = '';
  stack1 = helpers.unless.call(depth0, "visitProc.isEditingName", {"name":"unless","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(18, data),"inverse":this.program(20, data),"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("                        \r\n");
  return buffer;
},"18":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("                          <div class=\"list-group-item\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "editName", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">");
  stack1 = helpers._triageMustache.call(depth0, "visitProc.name", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</div>\r\n");
  return buffer;
},"20":function(depth0,helpers,partials,data) {
  var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("                          ");
  data.buffer.push(escapeExpression(((helpers.input || (depth0 && depth0.input) || helperMissing).call(depth0, {"name":"input","hash":{
    'insert-newline': ("updateName"),
    'focus-out': ("updateName"),
    'placeholder': ("New Procedure"),
    'value': ("visitProc.name"),
    'class': ("list-group-item")
  },"hashTypes":{'insert-newline': "STRING",'focus-out': "STRING",'placeholder': "STRING",'value': "ID",'class': "STRING"},"hashContexts":{'insert-newline': depth0,'focus-out': depth0,'placeholder': depth0,'value': depth0,'class': depth0},"types":[],"contexts":[],"data":data}))));
  data.buffer.push("                      \r\n");
  return buffer;
},"22":function(depth0,helpers,partials,data) {
  data.buffer.push("                <div class=\"clearfix\"></div>\r\n");
  },"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, buffer = '';
  data.buffer.push("<!-- BEGIN CONTENT -->\r\n<div class=\"page-content-wrapper col-sm-12 right\">\r\n    <div id=\"protocol-container\" class=\"page\">\r\n        <div class=\"resetHorMargin row\">\r\n");
  stack1 = helpers['if'].call(depth0, "isEditingName", {"name":"if","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(1, data),"inverse":this.program(3, data),"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n");
  stack1 = helpers['if'].call(depth0, "isEditingDescription", {"name":"if","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(5, data),"inverse":this.program(7, data),"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("            \r\n            <button class=\"btn btn-primary\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "save", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">Save Changes</button>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n          <div class=\"proceduresCont row margin-row\">\r\n            <h4 class=\"procedure-title col-sm-12\">Procedures</h4>\r\n            <ul class=\"procedures connectedSortable col-sm-12\" data-auto-scroll=\"true\" data-slide-speed=\"200\">\r\n");
  stack1 = helpers.each.call(depth0, "procedure", "in", "procedures", {"name":"each","hash":{
    'itemController': ("procedure")
  },"hashTypes":{'itemController': "STRING"},"hashContexts":{'itemController': depth0},"fn":this.program(9, data),"inverse":this.noop,"types":["ID","ID","ID"],"contexts":[depth0,depth0,depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("            </ul>\r\n            <button style=\"display:block\" id= \"proc\" class=\"btn bg-gray addProc\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "add_procedure", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">+</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-10\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n              <div class=\"row\">\r\n");
  stack1 = helpers.each.call(depth0, "visit", "in", "visits", {"name":"each","hash":{
    'itemController': ("visit")
  },"hashTypes":{'itemController': "STRING"},"hashContexts":{'itemController': depth0},"fn":this.program(15, data),"inverse":this.noop,"types":["ID","ID","ID"],"contexts":[depth0,depth0,depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n            <div class=\"col-sm-3\" id=\"col1\">\r\n              <div class=\"row margin-row nvisitPos\" id=\"nvisit1\" style=\"display:block\">\r\n                <div   class= \"n_visit\" id= \"\">\r\n                  <h4 id=\"\" class=\"new-visit-title\" >NEW VISIT</h4>\r\n                  <button  id=\"nV1\" class=\"btn bg-gray bottom-0 n_visit addProc\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "add_visit", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push(">+</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n<!-- END CONTENT -->\r\n");
  return buffer;
},"useData":true});

Ember.TEMPLATES["protocols/index"] = Ember.Handlebars.template({"1":function(depth0,helpers,partials,data) {
  data.buffer.push("(Add new Protocol)");
  },"3":function(depth0,helpers,partials,data) {
  var stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = '';
  data.buffer.push("        <tr ");
  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {"name":"bind-attr","hash":{
    'id': ("item.id")
  },"hashTypes":{'id': "STRING"},"hashContexts":{'id': depth0},"types":[],"contexts":[],"data":data})));
  data.buffer.push(">\r\n            <td>");
  stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, "protocols.configure", "item", {"name":"link-to","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(4, data),"inverse":this.noop,"types":["STRING","ID"],"contexts":[depth0,depth0],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("</td>\r\n            <td><a href=\"#\" ");
  data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete", {"name":"action","hash":{},"hashTypes":{},"hashContexts":{},"types":["STRING"],"contexts":[depth0],"data":data})));
  data.buffer.push("><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></a></td>\r\n        </tr>\r\n");
  return buffer;
},"4":function(depth0,helpers,partials,data) {
  var stack1;
  stack1 = helpers._triageMustache.call(depth0, "item.name", {"name":"_triageMustache","hash":{},"hashTypes":{},"hashContexts":{},"types":["ID"],"contexts":[depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  else { data.buffer.push(''); }
  },"6":function(depth0,helpers,partials,data) {
  data.buffer.push("        Sorry, no elements were found.\r\n");
  },"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
  var stack1, helperMissing=helpers.helperMissing, buffer = '';
  data.buffer.push("<div class=\"row\">\r\n  <div class=\"col-md-5\">\r\n    Protocols\r\n    ");
  stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, "protocols.add", {"name":"link-to","hash":{},"hashTypes":{},"hashContexts":{},"fn":this.program(1, data),"inverse":this.noop,"types":["STRING"],"contexts":[depth0],"data":data}));
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("\r\n<br/>\r\n<br/>\r\n\r\n<table class=\"table table-striped table-hover\" id=\"protocols_table\">\r\n    <tbody>\r\n");
  stack1 = helpers.each.call(depth0, "item", "in", "model", {"name":"each","hash":{
    'itemController': ("protocol")
  },"hashTypes":{'itemController': "STRING"},"hashContexts":{'itemController': depth0},"fn":this.program(3, data),"inverse":this.program(6, data),"types":["ID","ID","ID"],"contexts":[depth0,depth0,depth0],"data":data});
  if (stack1 != null) { data.buffer.push(stack1); }
  data.buffer.push("    </tbody>\r\n</table>\r\n");
  return buffer;
},"useData":true});